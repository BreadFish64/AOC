#version 460

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;
layout(binding = 0) uniform isampler2D in_image;
layout(binding = 1, r8i) uniform writeonly restrict iimage2D out_image;
layout(binding = 2, r8i) uniform readonly restrict iimage1D rules;

const int pound = 0x23;

vec2 scale = 1.0f / (textureSize(in_image, 0) - 1);

void main() {
    ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
    int rule = 0;
    for (int y = -1; y <= 1; ++y) {
        for (int x = -1; x <= 1; ++x) {
            // Needed to use a sampled texture because of the border
            int neighbor = textureLodOffset(in_image, coord * scale, 0.0, ivec2(x, y)).x;
            rule <<= 1;
            rule |= neighbor == pound ? 1 : 0;
        }
    }
    imageStore(out_image, coord, imageLoad(rules, rule));
}
